import { CalendarAppSingleton, PluginBase } from "@schedule-x/shared";
import { createEventsServicePlugin } from "@schedule-x/event-recurrence";
import { CalendarEvent } from "@schedule-x/calendar";
import { createElement } from "preact";
type PluginConfig = {
    onAddEvent?: (event: CalendarEvent) => void;
    onBeforeAddEvent?: (event: CalendarEvent, $app: CalendarAppSingleton) => boolean;
};
declare class DragToCreatePlugin implements PluginBase<string> {
    private config;
    name: string;
    $app: CalendarAppSingleton;
    constructor(config: PluginConfig);
    beforeRender($app: CalendarAppSingleton): void;
    dragToCreate(eventId: string | number, otherEventProperties?: Omit<CalendarEvent, "id" | "start" | "end">): void;
}
type EventsService = Partial<ReturnType<typeof createEventsServicePlugin>>;
interface SidebarPluginConfig {
    eventsService: EventsService;
    dragToCreatePlugin?: DragToCreatePlugin;
    activeCalendarIds?: string[];
    openOnRender?: boolean;
    placeholderEvents?: Omit<CalendarEvent, "start" | "end" | "id">[];
    hasCalendarToggles?: boolean;
    idFactory?: () => string | number;
}
interface SidebarPlugin extends PluginBase<string> {
    name: string;
    init?($app: CalendarAppSingleton): void;
    eventsService: EventsService;
}
declare const createSidebarPlugin: (config: SidebarPluginConfig) => {
    name: string;
    eventsService: Partial<{
        name: string;
        $app: CalendarAppSingleton;
        eventsFacade: EventsFacade;
        beforeRender($app: CalendarAppSingleton): void;
        add(event: CalendarEventExternal): void;
        update(event: CalendarEventExternal): void;
        remove(eventId: string | number): void;
        get(eventId: string | number): CalendarEventExternal | undefined;
        getAll(): CalendarEventExternal[];
        set(events: CalendarEventExternal[]): void;
        throwNotInitializedError: any;
        setBackgroundEvents(backgroundEvents: {
            start: string;
            end: string;
            style: createElement.JSX.CSSProperties;
            title?: string;
        }[]): void;
    } & {
        name: "eventsService";
    }>;
    onRender(_$app: any): void;
} & {
    name: "sidebar";
};
export type { SidebarPlugin };
export { createSidebarPlugin };
